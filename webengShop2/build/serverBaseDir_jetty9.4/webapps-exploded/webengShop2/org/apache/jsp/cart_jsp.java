/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.24.v20191120
 * Generated at: 2020-06-05 10:57:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.lang.*;
import webengShop2.transferobjects.Cart;
import webengShop2.transferobjects.Article;
import webengShop2.businesslogic.CartManager;
import java.math.*;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.math");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("webengShop2.transferobjects.Article");
    _jspx_imports_classes.add("webengShop2.businesslogic.CartManager");
    _jspx_imports_classes.add("webengShop2.transferobjects.Cart");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/foundation-icons.min.css\">\r\n");
      out.write("\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <title>Shoppingcart</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("    ");
      webengShop2.transferobjects.Cart cartBean = null;
      synchronized (session) {
        cartBean = (webengShop2.transferobjects.Cart) _jspx_page_context.getAttribute("cartBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (cartBean == null){
          cartBean = new webengShop2.transferobjects.Cart();
          _jspx_page_context.setAttribute("cartBean", cartBean, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("    ");
 Cart userCart = (Cart)session.getAttribute("cartBean");
      out.write("\r\n");
      out.write("    <h1>Cart</h1>\r\n");
      out.write("        <table class=\"table\">\r\n");
      out.write("            <thead class=\"thead-dark\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th scope=\"col\">id</th>\r\n");
      out.write("                <th scope=\"col\">Name</th>\r\n");
      out.write("                <th scope=\"col\">Price</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            ");
 for(Article a : userCart.getArticleList()){
      out.write("\r\n");
      out.write("            ");
 int id = a.getId(); 
      out.write("\r\n");
      out.write("            ");
 String name = a.getName(); 
      out.write("\r\n");
      out.write("            ");
 float price = a.getPrice(); 
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print(id);
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(name);
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(price);
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
 }
      out.write("\r\n");
      out.write("            ");

                CartManager cartManager = new CartManager();
                double totalPrice = cartManager.calculatePrice(userCart);
                double roundedPrice = Math.round(totalPrice * 100.0) / 100.0;
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"1\"></td>\r\n");
      out.write("                <th>Total</th>\r\n");
      out.write("                <th>");
      out.print(roundedPrice);
      out.write(" â‚¬</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"2\"></td>\r\n");
      out.write("                <td class=\"w-25 p-3\">\r\n");
      out.write("                    <form style=\"float: right\" name=\"Cart_checkout\" method=\"get\" action=\"FrontControllerServlet\">\r\n");
      out.write("                        <button type=\"submit\" name=\"action\" value=\"checkout\" class=\"btn btn-primary\">\r\n");
      out.write("                            <i class=\"fi-paypal\"></i> Checkout\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                    <form class=\"mr-3\" style=\"float: right\" name=\"article_list\" method=\"get\" action=\"FrontControllerServlet\">\r\n");
      out.write("                        <button type=\"submit\" name=\"action\" value=\"articlelist\" class=\"btn btn-secondary\">\r\n");
      out.write("                            <i class=\"fi-list\"></i> Catalog\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
